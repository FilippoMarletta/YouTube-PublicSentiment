version: "3.9"
services:

  youtube_comments:
    hostname: youtube_comments
    build: ./python_script
    container_name: youtube_comments
    volumes:
      - ./python_script/script.py:/app/script.py
    secrets: 
      - youtube_api_key
    entrypoint: ["python", "script.py", ""]
    tty: true
    depends_on:
      logstash:
        condition: service_healthy
  
  kafka-broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: kafka-broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://broker:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
  
  kafka-topics:
    image: apache/kafka:latest
    command: > 
      bash -c "
      /opt/kafka/bin/kafka-topics.sh --create --topic youtube-comments --bootstrap-server broker:9092"
    depends_on:
      - kafka-broker

  # kafka-conusumer-input:
  # image: apache/kafka:latest
  # command: /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server broker:9092 --topic youtube-comments
  # depends_on:
  #   kafka-topics:
  #     condition: service_completed_successfully
  
  logstash:
    hostname: logstash-container
    build: ./logstash
    container_name: logstash-container
    environment:
      XPACK_MONITORING_ENABLED: "false"
    ports:
      - 9090:9090
      - 9600:9600
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600/_node/stats"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      kafka-topics:
        condition: service_completed_successfully
  
  
  spark:
    build:
      context: ./spark
      dockerfile: Dockerfile
    container_name: spark
    hostname: spark
    ports:
      - "4040:4040"
    volumes:
      - ./spark:/opt/youtubepublicsentiment
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /opt/youtubepublicsentiment/.secret
    command: >
      /opt/spark/bin/spark-submit --conf spark.driver.extraJavaOptions="-Divy.cache.dir=/tmp -Divy.home=/tmp" --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.4.2,org.elasticsearch:elasticsearch-spark-30_2.12:8.13.4 /opt/youtubepublicsentiment/youtubepublicsentiment.py
    depends_on:
      kafka-topics:
        condition: service_completed_successfully

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch                   
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - http.port=9200
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ports:
      - "9200:9200"
  
  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - ./kibana/config:/usr/share/kibana/config
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

secrets:
  youtube_api_key:
    file: ./python_script/.secret